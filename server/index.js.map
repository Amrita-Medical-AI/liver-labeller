{
  "version": 3,
  "sources": ["../mocks/index.js", "../server.ts", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.jsx", "../app/root.jsx", "../app/session.server.js", "../app/models/user.server.js", "../app/components/offlineModal.jsx", "../app/routes/patient.label.$id.jsx", "../app/models/patient.server.js", "../app/models/cipher.server.js", "../app/components/stopwatch.jsx", "../app/components/procedurestopwatch.jsx", "../app/components/popupModal.jsx", "../app/components/utils.jsx", "../app/components/LiverStopwatch.jsx", "../app/routes/decrypt-auth.jsx", "../app/routes/patient.$id.jsx", "../app/components/jsontable.jsx", "../app/routes/invalid.jsx", "../app/routes/_index.jsx", "../app/routes/logout.jsx", "../app/routes/search.jsx", "../app/components/PatientDataCard.jsx", "../app/routes/login.jsx", "../app/utils.js", "../app/routes/join.jsx", "../cypress/support/test-routes/create-user.ts", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["const { setupServer } = require(\"msw/node\");\n\nconst server = setupServer();\n\nserver.listen({ onUnhandledRequest: \"bypass\" });\n\nprocess.once(\"SIGINT\", () => server.close());\nprocess.once(\"SIGTERM\", () => server.close());\n", "import { createRequestHandler } from \"@remix-run/architect\";\nimport * as build from \"@remix-run/dev/server-build\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  require(\"./mocks\");\n}\n\nexport const handler = createRequestHandler({\n  build,\n  mode: process.env.NODE_ENV,\n});\n", "\nimport * as entryServer from \"/Users/anshuman/Work/EUSML/liver-labeller/app/entry.server.jsx\";\nimport * as route0 from \"./root.jsx\";\nimport * as route1 from \"./routes/patient.label.$id.jsx\";\nimport * as route2 from \"./routes/decrypt-auth.jsx\";\nimport * as route3 from \"./routes/patient.$id.jsx\";\nimport * as route4 from \"./routes/invalid.jsx\";\nimport * as route5 from \"./routes/_index.jsx\";\nimport * as route6 from \"./routes/logout.jsx\";\nimport * as route7 from \"./routes/search.jsx\";\nimport * as route8 from \"./routes/login.jsx\";\nimport * as route9 from \"./routes/join.jsx\";\nimport * as route10 from \"./../cypress/support/test-routes/create-user.ts\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_headers\":false,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/_static/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/patient.label.$id\": {\n      id: \"routes/patient.label.$id\",\n      parentId: \"root\",\n      path: \"patient/label/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/decrypt-auth\": {\n      id: \"routes/decrypt-auth\",\n      parentId: \"root\",\n      path: \"decrypt-auth\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/patient.$id\": {\n      id: \"routes/patient.$id\",\n      parentId: \"root\",\n      path: \"patient/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/invalid\": {\n      id: \"routes/invalid\",\n      parentId: \"root\",\n      path: \"invalid\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/search\": {\n      id: \"routes/search\",\n      parentId: \"root\",\n      path: \"search\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"../cypress/support/test-routes/create-user\": {\n      id: \"../cypress/support/test-routes/create-user\",\n      parentId: \"root\",\n      path: \"__tests/create-user\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    }\n  };", "import { PassThrough } from \"stream\";\n\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request,\n  responseStatusCode,\n  responseHeaders,\n  remixContext\n) {\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\n    ? \"onAllReady\"\n    : \"onShellReady\";\n\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        [callbackName]: () => {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError: (err) => {\n          reject(err);\n        },\n        onError: (error) => {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration } from\n\"@remix-run/react\";\n\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\nimport { getUser } from \"./session.server\";\nimport OfflineModal from \"./components/offlineModal\";\n\nexport const links = () => {\n  return [\n  { rel: \"stylesheet\", href: tailwindStylesheetUrl },\n  // NOTE: Architect deploys the public directory to /_static/\n  { rel: \"icon\", href: \"/_static/favicon.ico\" }];\n\n};\n\nexport const loader = async ({ request }) => {\n  return json({\n    user: await getUser(request)\n  });\n};\n\nexport default function App() {\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full\">\n        <OfflineModal />\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(request) {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getUser(request) {\n  // const userId = await getUserId(request);\n  // if (userId === undefined) return null;\n\n  // const user = await getUserById(userId);\n  // if (user) return user;\n\n  let userdummmy = { id: 1 , org:\"liver\"}; //d841f266-e29c-4b8f-8641-21636dedb5e7\n  return userdummmy;\n\n  // throw await logout(request);\n}\n\nexport async function requireUserId(\n  request,\n  redirectTo = new URL(request.url).pathname\n) {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 10 // 10 days\n          : undefined,\n      }),\n    },\n  });\n}\n\nexport async function logout(request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import arc from \"@architect/functions\";\nimport bcrypt from \"bcryptjs\";\nimport invariant from \"tiny-invariant\";\n\nexport async function getUserById(id) {\n  const db = await arc.tables();\n  const result = await db.user.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": id },\n  });\n\n  const [record] = result.Items;\n  if (record) {\n    return {\n      id: record.pk,\n      email: record.email,\n      org: record.org,\n      encryption_key: record.encryption_key,\n      decryption_access: record.decryption_access\n    };\n  }\n  return null;\n}\n\nexport async function getUserByEmail(email) {\n  return getUserById(`email#${email}`);\n}\n\nasync function getUserPasswordByEmail(email) {\n  const db = await arc.tables();\n  const result = await db.password.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": `email#${email}` },\n  });\n\n  const [record] = result.Items;\n\n  if (record) return { hash: record.password };\n  return null;\n}\n\nexport async function createUser(email, password) {\n  const hashedPassword = await bcrypt.hash(password, 10);\n  const db = await arc.tables();\n  await db.password.put({\n    pk: `email#${email}`,\n    password: hashedPassword,\n  });\n\n  const user = await getUserByEmail(email);\n  invariant(user, `User not found after being created. This should not happen`);\n\n  return user;\n}\n\nexport async function deleteUser(email) {\n  const db = await arc.tables();\n  await db.password.delete({ pk: `email#${email}` });\n  await db.user.delete({ pk: `email#${email}` });\n}\n\nexport async function verifyLogin(email, password) {\n  const userPassword = await getUserPasswordByEmail(email);\n\n  if (!userPassword) {\n    return undefined;\n  }\n\n  const isValid = await bcrypt.compare(password, userPassword.hash);\n  if (!isValid) {\n    return undefined;\n  }\n\n  return getUserByEmail(email);\n}\n\nexport async function isUserRegistered(email) {\n  const user = await getUserPasswordByEmail(email);\n\n  if (user !== null && user.hash) {\n    return true;\n  }\n\n  return false;\n}\n", "import * as React from \"react\";\n\nconst OfflineModal = () => {\n  const [isOnline, setIsOnline] = React.useState(true);\n\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      setIsOnline(window.navigator.onLine);\n    }, 250);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  if (isOnline) {\n    return null;\n  }\n\n  return (\n    <div className=\"bg-yellow-600 p-3 text-white\">\n      <div className=\"text-center\">\n        <div className=\"text-base font-bold\">\n          <span className=\"text-lg\">You're offline</span> - Please check your\n          internet connection!\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OfflineModal;\n", "import { Form } from \"@remix-run/react\";\nimport {\n  getPatientById,\n  putProcedureTimeStamps,\n} from \"~/models/patient.server\";\nimport { json, redirect } from \"@remix-run/node\";\nimport Stopwatch from \"~/components/stopwatch\";\n\nconst formatTime = (time) => {\n  const hours = Math.floor(time / 36000);\n  const minutes = Math.floor((time % 36000) / 600);\n  const seconds = Math.floor((time % 600) / 10);\n\n  return `${hours.toString().padStart(2, \"0\")}:${minutes\n    .toString()\n    .padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`;\n};\n\nexport const loader = async ({ request, params }) => {\n  const patientId = params.id;\n  const patient = await getPatientById({ patientId });\n  if (!patient) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  return json({ patient });\n};\n\nexport const action = async ({ request, params }) => {\n  const formData = await request.formData();\n  const patientId = params.id;\n  const data = {\n    patientId,\n  };\n  for (let entry of formData.entries()) {\n    const [key, value] = entry;\n    data[key] = formatTime(value);\n  }\n  console.log(\"The data:\", data);\n  const procedureTimeStap = await putProcedureTimeStamps(data);\n\n  return redirect(`/patient/${patientId}`);\n};\n\nexport default function Label() {\n  return (\n    <div className=\"flex min-h-screen flex-row items-start justify-center bg-background\">\n      <div className=\"flex w-full flex-col items-center\">\n        <div className=\"flex w-full flex-row items-center justify-center bg-slate-700 p-2\">\n          <h1 className=\"my-3 text-2xl font-bold text-white\">\n            Label Patient Data\n          </h1>\n        </div>\n        <Form\n          method=\"post\"\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            gap: 10,\n            width: \"45vh\",\n          }}\n        >\n          <Stopwatch />\n          <div className=\"text-right\"></div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import arc from \"@architect/functions\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { encryptPatient } from './cipher.server';\nimport { uniqueNamesGenerator, adjectives, names, NumberDictionary } from 'unique-names-generator';\n\n\nexport async function createPatient({ mrd, name, user }) {\n  const db = await arc.tables();\n  const patientID = uuidv4();\n\n  const patient_pii = await encryptPatient({ patientID, mrd, name, user });\n\n  let userOrg = user.org;\n  if (!userOrg) userOrg = \"Default\"\n\n  const numberDictionary = NumberDictionary.generate({ min: 10, max: 99 });\n  const patientPseudoName = uniqueNamesGenerator({\n    dictionaries: [adjectives, names, numberDictionary],\n    style: 'capital',\n    separator: '-',\n    seed: patientID\n  });\n\n  const result = await db.patient.put({\n    pk: patientID,\n    pseudo_name: patientPseudoName,\n    org: userOrg,\n  });\n  return {\n    patientId: result.pk,\n  };\n}\n\nexport async function getPatientById({ patientId }) {\n  const db = await arc.tables();\n  const result = await db.patient.get({ pk: patientId });\n\n  if (result) {\n    return {\n      patientId: result.pk,\n    };\n  }\n  return null;\n}\n\nexport async function updatePatientDetails({ patientId, updatedData }) {\n  const db = await arc.tables();\n  const patient = await db.patient.get({ pk: patientId });\n\n  if (patient) {\n    const updatedPatient = {\n      ...patient,\n      ...updatedData,\n    };\n\n    await db.patient.put(updatedPatient);\n\n    return {\n      patientId: updatedPatient.pk,\n    };\n  }\n\n  return null;\n}\n\nexport async function putProcedureTimeStamps(props) {\n  const { patientId, ...rest } = props;\n  const db = await arc.tables();\n  const patient = await db.patient.get({ pk: patientId });\n  const date = new Date().toISOString().split('T')[0];\n\n  if (patient) {\n    const updatedPatient = {\n      ...patient,\n      ...rest,\n      'Date': date,\n    };\n\n    await db.patient.put(updatedPatient);\n\n    return {\n      patientId: updatedPatient.pk,\n      \"Start Procedure\": \"00:00:00\",\n      ...rest,\n    };\n  }\n\n  return null;\n}\n\nexport async function getProcedureTimeStamps({ patientId }) {\n  const db = await arc.tables();\n\n  const patient = await db.patient.get({ pk: patientId });\n\n  return {\n    \"Start Procedure\": \"00:00:00\",\n    ...patient,\n  };\n}\n", "import CryptoJS from \"crypto-js\";\nimport arc from \"@architect/functions\";\n\nimport {\n  SecretsManagerClient,\n  GetSecretValueCommand,\n} from \"@aws-sdk/client-secrets-manager\";\n\nconst getSecretKey = async (encryption_key) => {\n\n  let secret = null;\n  if (process.env.NODE_ENV === \"development\") {\n    return process.env.SECRET_KEY\n  }\n\n  if (!encryption_key) encryption_key = \"Default\";\n\n  const secret_name = encryption_key;\n\n  try {\n    const client = new SecretsManagerClient({\n      region: \"ap-south-1\",\n    });\n    const response = await client.send(\n      new GetSecretValueCommand({\n        SecretId: secret_name,\n        VersionStage: \"AWSCURRENT\",\n      })\n    );\n\n    if ('SecretString' in response) {\n      secret = response.SecretString;\n    } else {\n      throw new Error(\"Secret string not found in response.\");\n    }\n  } catch (error) {\n    console.error(\"Error fetching secret:\", error);\n    return null\n  }\n  return secret\n}\n\nexport const encryptString = async (encryption_key, plainText) => {\n  const secret = await getSecretKey(encryption_key)\n  if (!secret) {\n    throw new Error(\"Secret key not initialized.\");\n  }\n  return CryptoJS.AES.encrypt(plainText, secret).toString();\n};\n\nexport const decryptString = async (encryption_key, cipherText) => {\n  const secret = await getSecretKey(encryption_key)\n  if (!secret) {\n    throw new Error(\"Secret key not initialized.\");\n  }\n  return CryptoJS.AES.decrypt(cipherText, secret).toString(CryptoJS.enc.Utf8);\n};\n\nexport async function encryptPatient({ patientID, mrd, name, user }) {\n\n  let encryption_key = user.encryption_key;\n  if (!encryption_key) encryption_key = \"Default\";\n\n  const org = user.org;\n  const date = new Date().toISOString().split('T')[0];\n  const data = {\n    pk: patientID,\n    mrd: await encryptString(encryption_key, mrd),\n    name: await encryptString(encryption_key, name),\n    mrd_hash: CryptoJS.SHA256(org+mrd).toString(),\n    date: date,\n    encryption_key: encryption_key,\n  }\n\n  const db = await arc.tables();\n  const result = await db.patient_info.put(data);\n\n  return {\n    patientId: result.pk,\n    mrd: await decryptString(encryption_key, result.mrd),\n    name: await decryptString(encryption_key, result.name),\n    date: result.date\n  };\n};\n\nexport async function getPatientById({ patientId, user }) {\n  const db = await arc.tables();\n  const patient = await db.patient_info.get({ pk: patientId });\n  if (!patient) {\n    return null;\n  }\n\n  if (!user) {\n    throw new Error(\"User object is null.\");\n  }\n  let encryption_key = user.encryption_key;\n  if (!encryption_key) encryption_key = \"Default\";\n\n  if(patient.encryption_key !== encryption_key){\n    return null;\n  }\n\n  return {\n    patientId: patient.pk,\n    mrd: await decryptString(encryption_key, patient.mrd),\n    name: await decryptString(encryption_key, patient.name),\n    date: patient.date,\n  };\n}\n\nexport async function getPatientByMrd({ mrd, user }) {\n  const db = await arc.tables();\n  const org = user.org;\n  const patientResult = await db.patient_info.scan({\n    FilterExpression: 'mrd_hash = :mrd_hash',\n    ExpressionAttributeValues: {\n      ':mrd_hash': CryptoJS.SHA256(org+mrd).toString(),\n    },\n  });\n\n  const patient = patientResult.Items[0];\n  if (!patient) {\n    return null;\n  }\n\n  let encryption_key = user.encryption_key;\n  if (!encryption_key) encryption_key = \"Default\";\n\n  if(patient.encryption_key !== encryption_key){\n    return null;\n  }\n  return {\n    patientId: patient.pk,\n    mrd: await decryptString(encryption_key, patient.mrd),\n    name: await decryptString(encryption_key, patient.name),\n    date: patient.date,\n  };\n}", "import { useState } from \"react\";\nimport ProcedureStopwatch from \"./procedurestopwatch\";\nimport LiverStopwatch from \"./LiverStopwatch\";\n\nexport default function Stopwatch() {\n  const [initialTime, setInitialTime] = useState(0);\n  const [procedureStarted, setProcedureStarted] = useState(false);\n\n  return (\n    <div className=\"mt-10 flex w-full flex-col items-center gap-2\">\n      <ProcedureStopwatch\n        onEndTimeChange={setInitialTime}\n        onProcedureStart={setProcedureStarted}\n      />\n        <LiverStopwatch\n          endTime={initialTime}\n          procedureStarted={procedureStarted}\n        />\n    </div>\n  );\n}\n", "import { useState, useEffect, useRef } from \"react\";\nimport { Form} from \"@remix-run/react\";\nimport { PlayIcon, StopIcon } from \"@heroicons/react/solid\";\nimport PopupModal from \"./popupModal\";\nimport { formatTime } from \"./utils\";\n\nexport default function ProcedureStopwatch({\n  onEndTimeChange,\n  onProcedureStart,\n}) {\n  const [endTime, setEndTime] = useState(0);\n  const [timer, setTimer] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  useEffect(() => {\n    onEndTimeChange(endTime);\n  }, [endTime, onEndTimeChange]);\n\n  useEffect(() => {\n    return () => {\n      if (timer) {\n        clearInterval(timer);\n      }\n    };\n  }, [timer]);\n\n  const hiddenSubmitButtonRef = useRef(null);\n\n  const toggleTimer = () => {\n    if (!timer) {\n      // on procedure start\n      console.log(\"procedure start\");\n      setTimer(setInterval(() => setEndTime((prevTime) => prevTime + 1), 100));\n      onProcedureStart(true);\n    } else {\n      // on procedure end\n      console.log(\"procedure end\");\n      toggleModal();\n    }\n  };\n\n  const completeProcedure = () => {\n    toggleModal();\n    clearInterval(timer);\n    setTimer(null);\n    onEndTimeChange(endTime);\n    onProcedureStart(false);\n    hiddenSubmitButtonRef.current.click();\n  };\n\n  const toggleModal = () => {\n    setModalOpen(!modalOpen);\n  };\n\n  return (\n    <div className=\"w-full\">\n      <PopupModal isOpen={modalOpen} onClose={toggleModal}>\n        <Form method=\"post\" onSubmit={toggleModal}>\n          <label className=\"mx-5 mt-5 text-2xl text-teal-400\">\n            Confirm Stop!\n          </label>\n          <div className=\"my-4 flex flex-col gap-2 text-white\">\n           Do you want to end the procedure ?\n          </div>\n          <div className=\"flex flex-row justify-between px-3\">\n            <button\n              className=\" m-3 rounded-md bg-red-500 px-5 py-3 text-gray-100 hover:bg-red-600 hover:text-gray-300\"\n              onClick={toggleModal}\n            >\n              No\n            </button>\n            <button\n              className=\" m-3 rounded-md bg-teal-600 px-5 py-3 text-gray-100 hover:bg-teal-800 hover:text-gray-300\"\n              type=\"submit\"\n              onClick={completeProcedure}\n            >\n              Yes\n            </button>\n          </div>\n        </Form>\n      </PopupModal>\n      <div className=\"flex w-full flex-col items-center gap-4\">\n        <div className=\"mx-4 flex h-20 w-full flex-row items-center justify-center gap-4 rounded border-4 border-teal-700 bg-teal-400 p-2\">\n          <div className=\"flex h-16 w-full items-center justify-center\">\n            <span className=\"font-mono text-3xl text-white\">\n              {formatTime(endTime)}\n            </span>\n          </div>\n        </div>\n        <button type=\"button\" onClick={toggleTimer} className=\"w-full\">\n          <input\n            ref={hiddenSubmitButtonRef}\n            type=\"submit\"\n            style={{ display: \"none\" }}\n          />\n          <div className=\"flex w-full flex-row items-center rounded bg-blue-500 p-2\">\n            <div className=\"mx-4 flex h-14 w-full items-center justify-center\">\n              <label className=\"flex-1 justify-start text-3xl text-white\">\n                {timer ? \"Stop Procedure\" : \"Start Procedure\"}\n              </label>\n              <div className=\"flex-shrink-0\">\n                <button\n                  type=\"button\"\n                  onClick={toggleTimer}\n                  className=\"ml-2 rounded-full bg-blue-400 p-1 hover:bg-blue-500 focus:bg-blue-300\"\n                >\n                  {timer ? (\n                    <StopIcon className=\"h-6 w-6 text-white\" />\n                  ) : (\n                    <PlayIcon className=\"h-6 w-6 text-white\" />\n                  )}\n                </button>\n              </div>\n              <input name=\"Stop Procedure\" value={endTime} className=\"hidden\" />\n            </div>\n          </div>\n        </button>\n      </div>\n    </div>\n  );\n}\n", "import * as React from \"react\";\n\nconst PopupModal = ({ isOpen, onClose, children }) => {\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\n      <div className=\"absolute inset-0 bg-gray-800 opacity-70\"></div>\n      <div className=\"z-10 rounded-lg bg-background p-4\">\n        <div>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default PopupModal;\n", "export const formatTime = (time) => {\n  const hours = Math.floor(time / 36000);\n  const minutes = Math.floor((time % 36000) / 600);\n  const seconds = Math.floor((time % 600) / 10);\n  const centiseconds = time % 10;\n\n  return `${hours.toString().padStart(2, \"0\")}:${minutes\n    .toString()\n    .padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}.${centiseconds}`;\n};\n", "// FNAStopwatch.js\nimport { useState, useEffect } from \"react\";\nimport { PlayIcon, StopIcon } from \"@heroicons/react/solid\";\nimport { formatTime } from \"./utils\";\n\nexport default function LiverStopwatch({\n  endTime,\n  procedureStarted,\n}) {\n  const [liverStartTime, setLiverStartTime] = useState(0);\n  const [liverEndTime, setLiverEndTime] = useState(0);\n  const [liverTimer, setLiverTimer] = useState(null);\n  const [timePeriods, setTimePeriods] = useState([]);\n\n  const toggleLiverTimer = () => {\n    if (liverTimer) {\n      clearInterval(liverTimer);\n      setLiverTimer(null);\n      setLiverEndTime((prevTime) => prevTime + 1);\n      setTimePeriods([\n        ...timePeriods,\n        { start: liverStartTime, end: liverEndTime + 1 },\n      ]);\n    } else {\n      setLiverStartTime(endTime);\n      setLiverEndTime(endTime);\n      setLiverTimer(\n        setInterval(() => setLiverEndTime((prevTime) => prevTime + 1), 100)\n      );\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      if (liverTimer) {\n        clearInterval(liverTimer);\n      }\n    };\n  }, [liverTimer]);\n\n  let isDisabled =\n    !procedureStarted ;\n\nreturn (\n    <button\n        type=\"button\"\n        onClick={toggleLiverTimer}\n        className={`flex w-full flex-col items-center gap-2 rounded md:min-w-[min-content] my-12 ${\n            isDisabled\n                ? \"cursor-not-allowed bg-slate-600 text-gray-300 opacity-50 drop-shadow-2xl \" \n                 : \"bg-slate-600 text-white shadow-lg border-2\"\n        }`}\n        disabled={isDisabled}\n    >\n        <div className=\"flex w-full flex-row items-center p-2\">\n            <div className=\"relative flex h-16 w-full min-w-[min-content] flex-row items-center justify-center\">\n                {liverTimer ? (\n                    <div className=\"absolute text-center my-auto mr-5 flex w-full flex-row px-2 md:px-4 gap-5 \">\n                        <label className=\"text-xl md:text-2xl pl-12\">Liver</label>\n                        <label className=\"text-xl md:text-2xl text-center w-full\">\n                            {\" \"}\n                            {formatTime(liverEndTime)}\n                        </label>\n                    </div>\n                ) : (\n                    <label className=\"absolute left-0 my-auto w-full px-2 text-center text-2xl md:px-4 md:text-3xl\">\n                        Liver Timer\n                    </label>\n                )}\n                <div\n                    className={`absolute right-0 mx-4 h-8 w-8 rounded-full p-1 text-white ${\n                        isDisabled ? `bg-gray-400` : `bg-blue-400 hover:bg-blue-500 focus:bg-blue-300`\n                    }`}\n                >\n                    {liverTimer ? (\n                        <StopIcon className=\"\" />\n                    ) : (\n                        <PlayIcon className=\"\" />\n                    )}\n                </div>\n                {timePeriods.map((period, index) => (\n                    <div key={index} className=\"hidden w-full\">\n                        <input name={`Start Liver ${index + 1}`} value={period.start} />\n                        <input name={`Stop Liver ${index + 1}`} value={period.end} />\n                    </div>\n                ))}\n            </div>\n        </div>\n    </button>\n);\n}\n", "import * as React from \"react\";\nimport { Link } from \"@remix-run/react\";\n\nexport default function AccessRestrictedPage() {\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center bg-slate-800 \">\n      <div className=\" w-10/12 md:w-8/12\">\n        <div className=\"mt-4 text-5xl font-semibold text-teal-500\">Sorry,</div>\n        <div className=\"mt-4 text-left text-lg text-white\">\n          <span className=\"font-semibold\">Access Restricted:</span> You are not\n          authorized for decrypting patient data. If you think this is mistake\n          then please contact us.\n        </div>\n        <Link\n          to=\"/\"\n          className=\"mb-1 mt-5 inline-block rounded bg-dark-blue px-7 py-3 text-base text-white hover:bg-slate-700 md:text-lg\"\n        >\n          Home Page\n        </Link>\n      </div>\n    </div>\n  );\n}\n", "import React from \"react\";\nimport { useLoaderData, Link } from \"@remix-run/react\";\nimport { json } from \"@remix-run/node\";\nimport { getUser } from \"~/session.server\";\nimport { getProcedureTimeStamps } from \"~/models/patient.server\";\nimport { getPatientById } from \"~/models/cipher.server\";\nimport JsonTable from \"~/components/jsontable\";\n\nexport const loader = async ({ request, params }) => {\n  const patientId = params.id;\n  const user = await getUser(request);\n  const patient = await getPatientById({ patientId, user });\n  const procedureTimeStamps = await getProcedureTimeStamps({ patientId });\n  if (!patient) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  return json({ patient, procedureTimeStamps });\n};\n\nexport default function Patient() {\n  const data = useLoaderData();\n  const timeStamps = data.procedureTimeStamps;\n\n  return (\n    <div className=\"mx-auto w-full  bg-sky-900\">\n      <div className=\"relative flex min-h-screen flex-col items-center justify-center bg-background\">\n        <div className=\"flex w-full flex-col items-center \">\n          <div className=\"flex w-full flex-row items-center justify-center bg-slate-700 p-2\">\n            <div className=\"p-2 text-center text-2xl font-bold text-teal-400\">\n              Procedure Complete !\n            </div>\n          </div>\n          <div className=\"flex min-h-screen w-full flex-col items-start justify-start px-5\">\n            <div className=\"mx-2 my-8 md:mx-5\">\n              <div className=\"p-2 text-xl font-semibold text-white\">\n                MRD:{\" \"}\n                <span className=\"p-2 text-xl font-bold text-teal-400\">\n                  {\" \"}\n                  {data?.patient?.mrd}\n                </span>\n              </div>\n              <div className=\"p-2 text-xl font-semibold text-white\">\n                Name:{\" \"}\n                <span className=\"p-2 text-xl font-bold text-teal-400\">\n                  {\" \"}\n                  {data?.patient?.name}\n                </span>\n              </div>\n            </div>\n            <JsonTable data={timeStamps} />\n            <Link\n              to=\"/\"\n              className=\"mb-1 mt-5 inline-block rounded bg-dark-blue px-8 py-3 text-base text-white hover:bg-slate-700 md:text-lg\"\n            >\n              Label another patient\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import React from \"react\";\n\nexport default function JsonTable({ data }) {\n  const excludeKeys = [\"pk\", \"pseudo_name\", \"org\", \"Date\"];\n\n  const tableData = {};\n\n  Object.entries(data).forEach(([key, value]) => {\n    if (excludeKeys.includes(key)) return;\n\n    const matches = key.match(/(Start|Stop) (.+)/);\n    if (matches) {\n      const [_, action, eventName] = matches;\n      if (!tableData[eventName]) {\n        tableData[eventName] = { event: eventName, start: \"\", stop: \"\" };\n      }\n      tableData[eventName][action.toLowerCase()] = value;\n    }\n  });\n  \n  const sortedTableData = Object.values(tableData).sort((a, b) => {\n    const getEventNumber = (eventName) => {\n      const num = eventName.match(/\\d+/);\n      return num ? parseInt(num[0], 10) : 0;\n    };\n\n    const numA = getEventNumber(a.event);\n    const numB = getEventNumber(b.event);\n\n    if (numA !== numB) {\n      return numA - numB;\n    } else {\n      return a.event.localeCompare(b.event);\n    }\n  });\n\n  return (\n    <div className=\"overflow-x-auto\">\n      <table className=\"min-w-full table-auto border border-teal-500 rounded-xl\">\n        <thead className=\"bg-teal-500 text-white\">\n          <tr>\n            <th className=\"px-4 py-2 text-left text-lg border-b border-teal-500\">\n              \n            </th>\n            <th className=\"px-4 py-2 text-left text-lg border-b border-teal-500\">\n              Start Time\n            </th>\n            <th className=\"px-4 py-2 text-left text-lg border-b border-teal-500\">\n              Stop Time\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedTableData.map(({ event, start, stop }) => (\n            <tr key={event} className=\"bg-slate-700 text-white\">\n              <td className=\"border-t border-teal-500 px-4 py-2 text-lg\">\n                {event}\n              </td>\n              <td className=\"border-t border-teal-500 px-4 py-2 text-lg\">\n                {start}\n              </td>\n              <td className=\"border-t border-teal-500 px-4 py-2 text-lg\">\n                {stop}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n", "import * as React from \"react\";\n\nexport default function AccessRestrictedPage() {\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center bg-slate-800 \">\n      <div className=\" w-10/12 md:w-8/12\">\n        <div className=\"mt-4 text-5xl font-semibold text-teal-500\">Sorry,</div>\n        <div className=\"mt-4 text-left text-lg text-white\">\n          <span className=\"font-semibold\">Access Restricted:</span> You haven't\n          been registered yet. If you're interested in using the app, please\n          reach out to us via <a href=\"mailto:@amrita.com\" className=\"underline \">email</a>.\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport { getUserId, getUser } from \"~/session.server\";\nimport { createPatient } from \"~/models/patient.server\";\n\nexport const loader = async ({ request }) => {\n  // const userId = await getUserId(request);\n  // if (!userId) return redirect(\"/login\");\n  return json({});\n};\n\nexport const action = async ({ request }) => {\n  let formData = await request.formData();\n\n  let mrd = formData.get(\"mrd\");\n  let name = formData.get(\"name\");\n\n  if (typeof mrd !== \"string\" || mrd.length === 0) {\n    return json({ errors: { mrd: \"MRD is required\" } }, { status: 400 });\n  }\n\n  if (typeof name !== \"string\" || name.length === 0) {\n    return json({ errors: { name: \"Name is required\" } }, { status: 400 });\n  }\n\n  const user = await getUser(request);\n  const patient = await createPatient({ mrd, name, user });\n  return redirect(`/patient/label/${patient.patientId}`);\n};\n\nexport default function LabellerIndexPage() {\n  const actionData = useActionData();\n\n  return (\n    <div className=\"flex min-h-screen items-center justify-center bg-slate-800\">\n      <Form\n        method=\"post\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 10,\n          width: \"45vh\",\n        }}\n      >\n        {/* Name */}\n        <label className=\"mt-4 text-3xl text-teal-400\">Patient Name</label>\n        <input\n          name=\"name\"\n          id=\"name\"\n          type=\"text\"\n          className=\"border-0 border-b-2 border-blue-500 bg-slate-800 px-3 text-4xl text-white\"\n          aria-invalid={actionData?.errors?.name ? true : undefined}\n          aria-errormessage={\n            actionData?.errors?.name ? \"name-error\" : undefined\n          }\n        />\n        {actionData?.errors?.name && (\n          <div className=\"pt-1 text-red-700\" id=\"name-error\">\n            {actionData.errors.name}\n          </div>\n        )}\n\n        {/* MRD */}\n        <label className=\"mt-4 text-3xl text-teal-400\">Patient MRD</label>\n        <input\n          name=\"mrd\"\n          type=\"number\"\n          id=\"mrd\"\n          className=\"border-0 border-b-2 border-blue-500 bg-slate-800 px-3 text-4xl text-white\"\n          aria-invalid={actionData?.errors?.mrd ? true : undefined}\n          aria-errormessage={actionData?.errors?.mrd ? \"mrd-error\" : undefined}\n        />\n        {actionData?.errors?.mrd && (\n          <div className=\"pt-1 text-red-700\" id=\"mrd-error\">\n            {actionData.errors.mrd}\n          </div>\n        )}\n\n        {/* Start Button */}\n        <button\n          type=\"submit\"\n          className=\"flex items-center justify-center rounded-full bg-teal-400 px-5 py-4 text-lg text-white hover:bg-teal-500 focus:bg-teal-300\"\n          style={{\n            transition: \"all 0.2s ease-in-out\",\n            marginTop: \"20%\",\n          }}\n        >\n          Start &rarr;\n        </button>\n      </Form>\n    </div>\n  );\n}\n", "import { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/session.server\";\n\nexport const action = async ({ request }) => {\n  return logout(request);\n};\n\nexport const loader = async () => {\n  return redirect(\"/\");\n};\n", "import { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport { getUser } from \"~/session.server\";\nimport * as React from \"react\";\nimport { getPatientById, getPatientByMrd } from \"~/models/cipher.server\";\nimport { updatePatientDetails } from \"~/models/patient.server\";\nimport PatientDataCard from \"../components/PatientDataCard\";\n\nexport const loader = async ({ request, params }) => {\n  const user = await getUser(request);\n  if (user.decryption_access == false) {\n    return redirect(\"/decrypt-auth\");\n  }\n  return json({});\n};\n\nexport const action = async ({ request, params }) => {\n  let formData = await request.formData();\n\n  if (!formData.has(\"intent\")) {\n    return json({ errors: { message: \"Invalid request\" } }, { status: 400 });\n  }\n\n  if (formData.get(\"intent\") == \"search\") {\n    let patientId = formData.getAll(\"uuid\")[0];\n    let mrd = formData.getAll(\"mrd\")[0];\n\n    const errors = {};\n\n    if (!patientId && !mrd) {\n      errors.message = \"Enter either UUID or MRD\";\n      return json({ errors });\n    }\n\n    const user = await getUser(request);\n\n    let patient = null;\n    if (patientId) {\n      patient = await getPatientById({ patientId, user });\n      if (!patient) {\n        errors.message = \"Patient not found\";\n      }\n    } else {\n      patient = await getPatientByMrd({ mrd, user });\n      if (!patient) {\n        errors.message = \"Patient not found\";\n      }\n    }\n\n    if (Object.keys(errors).length > 0) {\n      return json({ errors });\n    }\n\n    return json({ patient });\n  }\n  if (formData.get(\"intent\") == \"biopsy\") {\n    const biopsy = formData.get(\"biopsy\");\n    const patientId = formData.get(\"patientId\");\n    var cancer = formData.get(\"cancer\");\n\n    if (cancer == \"true\") {\n      cancer = true;\n    }\n    else if (cancer == \"false\") {\n      cancer = false;\n    }\n\n    const updatedData = {\n      cancer: cancer,\n      biopsy: biopsy,\n    };\n    const newData = await updatePatientDetails({\n      patientId: patientId,\n      updatedData: updatedData,\n    });\n\n    return {}\n  }\n  return {}\n};\n\nexport default function PatientDecryptPage() {\n  const data = useActionData();\n\n  const [uuid, setUuid] = React.useState(\"\");\n  const [mrd, setMrd] = React.useState(\"\");\n\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center bg-slate-800\">\n      <div>\n        <h1 className=\"my-10 text-3xl font-bold text-white\">\n          Decrypt Patient Data\n        </h1>\n      </div>\n      <Form method=\"post\" className=\"flex flex-col justify-center \">\n        <input type=\"hidden\" name=\"intent\" value={\"search\"} />\n        <div className=\"flex flex-col\">\n          <div className=\"flex flex-col justify-center md:flex-row\">\n            <label className=\"my-3 text-2xl text-slate-300 md:mx-3 md:my-0\">\n              Enter UUID:{\" \"}\n            </label>\n            <input\n              type=\"text\"\n              name=\"uuid\"\n              value={uuid}\n              disabled={mrd ? true : false}\n              onChange={(e) => setUuid(e.target.value)}\n              placeholder=\"Eg : be510c33-06c4-47b7-84aa-c637b03adf8c\"\n              className=\"rounded border border-gray-300 p-2 md:w-96\"\n            />\n          </div>\n          <div className=\"mx-auto mb-2 mt-4 text-xl text-slate-50 md:my-4\">\n            OR\n          </div>\n          <div className=\"flex flex-col md:flex-row \">\n            <label className=\"my-3 text-2xl text-slate-300 md:mx-3 md:my-0\">\n              Enter MRD :{\" \"}\n            </label>\n            <input\n              type=\"text\"\n              name=\"mrd\"\n              disabled={uuid ? true : false}\n              value={mrd}\n              onChange={(e) => setMrd(e.target.value)}\n              placeholder=\"Eg : 34235\"\n              className=\"rounded border border-gray-300 p-2 md:w-96\"\n            />\n          </div>\n        </div>\n\n        <div className=\"mx-auto my-10\">\n          <button\n            type=\"submit\"\n            className=\"focus:shadow-outline rounded bg-blue-500 px-4 py-2 font-bold text-white hover:bg-blue-700 focus:outline-none\"\n          >\n            Search\n          </button>\n        </div>\n      </Form>\n      {\n        <div>\n          {data?.errors?.message && (\n            <div>\n              <div className=\"text-red-500\">{data.errors.message}</div>\n            </div>\n          )}\n          {data?.patient ? (\n            <PatientDataCard patient={data.patient} />\n          ) : (\n            <div></div>\n          )}\n        </div>\n      }\n    </div>\n  );\n}\n", "import React from \"react\";\n// import { Form } from \"@remix-run/react\";\n\nexport default function PatientDataCard({ patient }) {\n  const { patientId, mrd, name, date } = patient;\n\n  // const [cancerValue, setCancerValue] = React.useState(\"\");\n  // const [biopsyValue, setBiopsyValue] = React.useState(\"\");\n\n  // React.useEffect(() => {\n  //   setCancerValue(cancer);\n  //   setBiopsyValue(biopsy);\n  // }, [cancer, biopsy]);\n\n  return (\n    <div className=\"mx-auto max-w-lg rounded-md bg-white p-4 shadow-lg\">\n      <div className=\"mb-4\">\n        <h2 className=\"text-xl font-bold\">\n          <span className=\"font-bold\"> Name : </span>\n          <span>{name}</span>\n        </h2>\n        <p className=\"text-gray-700\">\n          <span className=\"font-bold\"> Patient UUID : </span>{\" \"}\n          <span>{patientId}</span>\n        </p>\n      </div>\n      <div className=\"mb-4\">\n        <p className=\"text-gray-800\">\n          <span className=\"font-bold\"> MRD : </span> <span>{mrd}</span>\n        </p>\n        <p className=\"text-gray-800\">\n          <span className=\"font-bold\">Date : </span>\n          <span>\n            {new Date(date).toLocaleDateString(\"en-IN\", {\n              year: \"numeric\",\n              month: \"long\",\n              day: \"numeric\",\n            })}\n          </span>\n        </p>\n      </div>\n      <div className=\" flex space-x-5\">\n        <button\n          className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-700\"\n          onClick={() => navigator.clipboard.writeText(patientId)}\n        >\n          Copy UUID\n        </button>\n        <button\n          className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-700\"\n          onClick={() => navigator.clipboard.writeText(mrd)}\n        >\n          Copy MRD\n        </button>\n      </div>\n      {/* <hr className=\"my-4\" /> */}\n      {/* <div className=\"my-3 text-xl font-semibold\"> Patient Report </div> */}\n      {/* <Form method={\"post\"}>\n        <input type=\"hidden\" name=\"intent\" value={\"biopsy\"} />\n        <input type=\"hidden\" name=\"patientId\" value={patientId} />\n        <div className=\"my-1 p-2\">\n          <label>\n            Cancer:\n            <select\n              className=\"my-1 w-full rounded border border-gray-300 p-2\"\n              name=\"cancer\"\n              value={cancerValue===undefined ?  \"\" : cancerValue}\n              onChange={(e) => setCancerValue(e.target.value)}\n            >\n              <option value=\"\">Select...</option>\n              <option value=\"true\">Yes - Cancer</option>\n              <option value=\"false\">No - Not Cancer</option>\n              <option value=\" \">No Data</option>\n            </select>\n          </label>\n        </div>\n        <div className=\"my-2 p-2\">\n          <div>\n            Biopsy Report:\n            <textarea\n              className=\"my-1 w-full rounded border border-gray-300 p-2\"\n              name=\"biopsy\"\n              value={biopsyValue ? biopsyValue : \"\"}\n              onChange={(e) => setBiopsyValue(e.target.value)}\n            />\n          </div>\n        </div>\n        <button\n          className=\"rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-700\"\n          type=\"submit\"\n        >\n          Submit\n        </button>\n      </Form> */}\n    </div>\n  );\n}\n", "import { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { verifyLogin } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\nexport const action = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"));\n  const remember = formData.get(\"remember\");\n\n  if (!validateEmail(email)) {\n    return json({ errors: { email: \"Email is invalid\" } }, { status: 400 });\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json(\n      { errors: { password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 5) {\n    return json(\n      { errors: { password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await verifyLogin(email, password);\n\n  if (!user) {\n    return json(\n      { errors: { email: \"Invalid email or password\" } },\n      { status: 400 }\n    );\n  }\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: remember === \"on\" ? true : false,\n    redirectTo,\n  });\n};\n\nexport const meta = () => [{ title: \"Login\" }];\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/\";\n  const actionData = useActionData();\n  const emailRef = React.useRef(null);\n  const passwordRef = React.useRef(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center bg-background\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n      <div className=\"mb-10 mt-5 justify-around\">\n          <div className=\"text-6xl text-teal-600\">\n            <h2 className=\"font-semibold\">Liver</h2>\n            <h2>Labeller</h2>\n          </div>\n\n          <span className=\"px-1 text-neutral-300\">By TexNano</span>\n        </div>\n        <Form method=\"post\" className=\"space-y-6\" noValidate>\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-100\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-200 px-2 py-1 text-lg\"\n              />\n\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-100\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"mt-5 w-full rounded bg-blue-500 py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Log in\n          </button>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember\"\n                name=\"remember\"\n                type=\"checkbox\"\n                className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                defaultChecked\n              />\n              <label\n                htmlFor=\"remember\"\n                className=\"ml-2 block text-sm text-gray-200\"\n              >\n                Remember me\n              </label>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(to, defaultRedirect = DEFAULT_REDIRECT) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  return to;\n}\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(id) {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n\n  return route?.data;\n}\n\nfunction isUser(user) {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nexport function useOptionalUser() {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser() {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateEmail(email) {\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\n}\n", "import { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { getUserId, createUserSession } from \"~/session.server\";\nimport {\n  createUser,\n  getUserByEmail,\n  isUserRegistered,\n} from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\nexport const action = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n\n  if (!validateEmail(email)) {\n    return json({ errors: { email: \"Email is invalid\" } }, { status: 400 });\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json(\n      { errors: { password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 5) {\n    return json(\n      { errors: { password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const validUser = await getUserByEmail(email);\n  if (!validUser) {\n    return redirect(\"/invalid\");\n  }\n\n  const userExists = await isUserRegistered(email);\n  if (userExists) {\n    return json(\n      { errors: { email: \"A user already registerd with this email\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await createUser(email, password);\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: true,\n    redirectTo,\n  });\n};\n\nexport const meta = () => [{ title: \"Sign Up\" }];\n\nexport default function Join() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/\";\n  const actionData = useActionData();\n  const emailRef = React.useRef(null);\n  const passwordRef = React.useRef(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center bg-background\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <div className=\"mb-10 mt-5 justify-around\">\n          <div className=\"text-6xl text-teal-600\">\n            <h2 className=\"font-semibold\">Liver</h2>\n            <h2>Labeller</h2>\n          </div>\n\n          <span className=\"px-1 text-neutral-300\">By TexNano</span>\n        </div>\n        <Form method=\"post\" className=\"space-y-6\" noValidate>\n          <div>\n            <label htmlFor=\"email\" className=\"block font-medium text-gray-100\">\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-200 px-2 py-1 text-lg\"\n              />\n\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block font-medium text-gray-100\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500 px-4 py-3 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Create Account\n          </button>\n          <div className=\"flex items-center justify-center\">\n            <div className=\"text-center text-sm text-gray-500\">\n              Already have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/login\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Log in\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { createUser } from \"~/models/user.server\";\nimport { createUserSession } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  if (process.env.NODE_ENV === \"production\") {\n    console.error(\n      \"\uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 test routes should not be enabled in production \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8\"\n    );\n    // test routes should not be enabled in production or without\n    // enable test routes... Just in case this somehow slips through\n    // we'll redirect :)\n    return redirect(\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\");\n  }\n\n  const { email } = await request.json();\n  if (!email) {\n    throw new Error(\"email required for login\");\n  }\n  if (!email.endsWith(\"@example.com\")) {\n    throw new Error(\"All test emails must end in @example.com\");\n  }\n\n  const user = await createUser(email, \"myreallystrongpassword\");\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: true,\n    redirectTo: \"/\",\n  });\n};\n\nexport default null;\n", "export default {'entry':{'module':'/_static/build/entry.client-F73UFY3M.js','imports':['/_static/build/_shared/chunk-WVGKLJ5Q.js','/_static/build/_shared/chunk-6XW2KFLU.js','/_static/build/_shared/chunk-OV6IFOTW.js']},'routes':{'../cypress/support/test-routes/create-user':{'id':'../cypress/support/test-routes/create-user','parentId':'root','path':'__tests/create-user','index':undefined,'caseSensitive':undefined,'module':'/_static/build/_.._/cypress/support/test-routes/create-user-VLKO7WQK.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-LD5E4KFQ.js','imports':['/_static/build/_shared/chunk-PKK3VIMV.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/_index-U2STDA6J.js','imports':['/_static/build/_shared/chunk-C4CEVAJD.js','/_static/build/_shared/chunk-D2VB6LJC.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/decrypt-auth':{'id':'routes/decrypt-auth','parentId':'root','path':'decrypt-auth','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/decrypt-auth-CUFVRIZU.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/invalid':{'id':'routes/invalid','parentId':'root','path':'invalid','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/invalid-UJVFTW7K.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/join-NJX2UMUJ.js','imports':['/_static/build/_shared/chunk-VXOUHI5O.js','/_static/build/_shared/chunk-C4CEVAJD.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/login-4WWOBSXB.js','imports':['/_static/build/_shared/chunk-VXOUHI5O.js','/_static/build/_shared/chunk-C4CEVAJD.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/logout-COB6LMBG.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/patient.$id':{'id':'routes/patient.$id','parentId':'root','path':'patient/:id','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/patient.$id-45R2CRPX.js','imports':['/_static/build/_shared/chunk-W4GZPDZJ.js','/_static/build/_shared/chunk-C4CEVAJD.js','/_static/build/_shared/chunk-D2VB6LJC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/patient.label.$id':{'id':'routes/patient.label.$id','parentId':'root','path':'patient/label/:id','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/patient.label.$id-RT2BM5DE.js','imports':['/_static/build/_shared/chunk-D2VB6LJC.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/search':{'id':'routes/search','parentId':'root','path':'search','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/search-TVWH4VXD.js','imports':['/_static/build/_shared/chunk-W4GZPDZJ.js','/_static/build/_shared/chunk-C4CEVAJD.js','/_static/build/_shared/chunk-D2VB6LJC.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'6fd9bd6f','hmr':undefined,'url':'/_static/build/manifest-6FD9BD6F.js'};"],
  "mappings": "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",
  "names": ["isbot", "import_node", "import_react", "import_node", "import_tiny_invariant", "arc", "bcrypt", "invariant", "bcrypt", "invariant", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "import_react", "import_functions", "import_functions", "CryptoJS", "arc", "arc", "uuidv4", "getPatientById", "import_node", "import_react", "import_react", "React", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_solid", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "formatTime", "loader", "getPatientById", "entry", "React", "import_react", "import_jsx_dev_runtime", "loader", "import_react", "import_node", "import_react", "import_jsx_dev_runtime", "action", "import_jsx_dev_runtime", "loader", "AccessRestrictedPage", "React", "import_jsx_dev_runtime", "action", "loader", "import_node", "import_react", "React", "import_jsx_dev_runtime", "loader", "action", "action", "loader", "import_node", "action", "loader", "action", "loader", "import_node", "import_react", "React", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "action", "action", "loader", "import_node", "import_react", "React", "import_react", "import_jsx_dev_runtime", "loader", "action", "_a", "_b", "_c", "_d", "action", "loader", "meta", "import_node", "import_react", "React", "import_jsx_dev_runtime", "loader", "action", "meta", "_a", "_b", "_c", "_d", "action", "import_node", "action"]
}
